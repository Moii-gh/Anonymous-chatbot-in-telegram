from datetime import datetime
from aiogram import Router, types, F
from aiogram.filters import Command

import data
from keyboards import get_main_keyboard, get_gender_keyboard

router = Router()

def init_user_profile(user_id):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç."""
    if user_id not in data.user_profiles:
        data.user_profiles[user_id] = {
            "gender": "",
            "interests": [],
            "age": "",
            "last_active": datetime.now(),
            "setup_complete": False
        }
    if user_id not in data.blocked_pairs:
        data.blocked_pairs[user_id] = []
    if user_id not in data.user_stats:
        data.user_stats[user_id] = {"chats_count": 0, "messages_sent": 0}

@router.message(Command("start"))
async def send_welcome(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    user_id = message.from_user.id
    init_user_profile(user_id)
    
    if not data.user_profiles[user_id].get("setup_complete", False):
        await message.answer(
            f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n"
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç-–±–æ—Ç! üé≠\n\n"
            "–î–∞–≤–∞–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏–º –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å.\n\n"
            "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª:",
            reply_markup=get_gender_keyboard()
        )
    else:
        await message.answer(
            "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! üëã\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_main_keyboard()
        )

@router.message(F.text == "‚ùì –ü–æ–º–æ—â—å")
async def show_help(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞."""
    help_text = (
        "<b>‚ùì –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É:</b>\n\n"
        "<b>üîç –ù–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞</b> - –ø–æ–∏—Å–∫ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞\n"
        "<b>‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç</b> - –∑–∞–∫–æ–Ω—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–∞–∑–≥–æ–≤–æ—Ä\n"
        "<b>üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å</b> - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞\n"
        "<b>ü§ù –û–±–º–µ–Ω—è—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏</b> - –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ–±–º–µ–Ω—è—Ç—å—Å—è —é–∑–µ—Ä–Ω–µ–π–º–∞–º–∏\n"
        "<b>üé≤ –ö–∞–º–µ–Ω—å-–ù–æ–∂–Ω–∏—Ü—ã-–ë—É–º–∞–≥–∞</b> - —Å—ã–≥—Ä–∞—Ç—å –≤ –º–∏–Ω–∏-–∏–≥—Ä—É\n"
        "<b>üíé –ü–æ–¥–∞—Ä–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É</b> - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫\n"
        "<b>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</b> - –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n"
        "<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b> - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
    )
    await message.answer(help_text, reply_markup=get_main_keyboard())

@router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def settings(message: types.Message):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–º–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª—è."""
    user_id = message.from_user.id
    init_user_profile(user_id)
    data.user_profiles[user_id]["setup_complete"] = False
    await message.answer(
        "‚öôÔ∏è –ò–∑–º–µ–Ω–∏–º –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å.\n\n–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª:",
        reply_markup=get_gender_keyboard()
    )

@router.message(F.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def show_stats(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_id = message.from_user.id
    init_user_profile(user_id) # –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ—Ç
    stats = data.user_stats[user_id]
    await message.answer(
        f"<b>üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n\n"
        f"üí¨ –í—Å–µ–≥–æ —á–∞—Ç–æ–≤: {stats['chats_count']}\n"
        f"‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {stats['messages_sent']}"
    )
