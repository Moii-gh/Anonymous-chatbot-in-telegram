from aiogram import Router, types, F, Bot
from aiogram.exceptions import TelegramBadRequest

import data
import config  # <- –î–æ–±–∞–≤–ª–µ–Ω–æ
from keyboards import get_interests_keyboard, get_main_keyboard
from handlers.common import init_user_profile

router = Router()

@router.message(F.text.in_(["üë¶ –ü–∞—Ä–µ–Ω—å", "üëß –î–µ–≤—É—à–∫–∞", "ü§ñ –ù–µ —É–∫–∞–∑—ã–≤–∞—Ç—å"]))
async def set_gender(message: types.Message):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã."""
    user_id = message.from_user.id
    init_user_profile(user_id)
    
    gender_map = {
        "üë¶ –ü–∞—Ä–µ–Ω—å": "male",
        "üëß –î–µ–≤—É—à–∫–∞": "female",
        "ü§ñ –ù–µ —É–∫–∞–∑—ã–≤–∞—Ç—å": "other"
    }
    data.user_profiles[user_id]["gender"] = gender_map[message.text]
    
    await message.answer(
        "–û—Ç–ª–∏—á–Ω–æ! üëç\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ):",
        reply_markup=get_interests_keyboard(user_id)
    )

@router.callback_query(F.data.startswith("interest_"))
async def toggle_interest(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–Ω—Ç–µ—Ä–µ—Å–∞ (–¥–æ–±–∞–≤–ª—è–µ—Ç/—É–¥–∞–ª—è–µ—Ç)."""
    user_id = callback.from_user.id
    init_user_profile(user_id)
    
    interest_id = int(callback.data.split("_")[1])
    interest = config.INTERESTS[interest_id] # <- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
    
    user_interests = data.user_profiles[user_id]["interests"]
    if interest in user_interests:
        user_interests.remove(interest)
    else:
        user_interests.append(interest)
        
    try:
        await callback.message.edit_reply_markup(
            reply_markup=get_interests_keyboard(user_id)
        )
    except TelegramBadRequest:
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å
        pass
    await callback.answer()

@router.callback_query(F.data == "interests_done")
async def finish_setup(callback: types.CallbackQuery, bot: Bot):
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–æ—Ñ–∏–ª—è."""
    user_id = callback.from_user.id
    data.user_profiles[user_id]["setup_complete"] = True
    
    interests_list = data.user_profiles[user_id]["interests"]
    interests_text = ", ".join(interests_list) if interests_list else "–Ω–µ —É–∫–∞–∑–∞–Ω—ã"
    
    gender_text_map = {
        "male": "–ü–∞—Ä–µ–Ω—å",
        "female": "–î–µ–≤—É—à–∫–∞",
        "other": "–ù–µ —É–∫–∞–∑–∞–Ω"
    }
    gender_text = gender_text_map.get(data.user_profiles[user_id]['gender'], "–ù–µ —É–∫–∞–∑–∞–Ω")
    
    await callback.message.edit_text(
        f"<b>üéâ –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω!</b>\n\n"
        f"<b>–ü–æ–ª:</b> {gender_text}\n"
        f"<b>–ò–Ω—Ç–µ—Ä–µ—Å—ã:</b> {interests_text}\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–∫–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤!"
    )
    await bot.send_message(
        user_id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_keyboard()
    )
    await callback.answer()

